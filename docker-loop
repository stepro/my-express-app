#!/bin/bash
set -e

ME="$0"
if [ -n "$(which cygpath)" ]; then
  ME=$(cygpath "$ME")
fi
ME=$(which "$ME")

MY_DIR=$(dirname "$ME")
PROJECT_NAME=$(basename $MY_DIR)

ACTION=$1
shift

_workspace() {
    IMAGE=$1
    CONTAINER=$2

    echo FROM $IMAGE

    echo COPY --from=stephpr/docker-workspace /ws /.ws

    echo RUN echo \'#!/bin/sh\' \> /.ws/build \\
    BUILD=$(docker inspect -f '{{index .Config.Labels "com.docker.loop.build"}}' $CONTAINER)
    if [ -n "$BUILD" ]; then
cat << EOF | sed "s/'/'\\\''/g" | sed "s/.*/ \&\& echo '\0' >> \/.ws\/build \\\\ /"
$BUILD
EOF
    fi
    echo " &&" chmod +x /.ws/build

    ENTRYPOINT=$(docker inspect -f '{{range .Config.Entrypoint}},{{json .}}{{end}}' $IMAGE)
    echo ENTRYPOINT [\"/.ws/start\"$ENTRYPOINT]

    CMD=$(docker inspect -f '{{json .Config.Cmd}}' $IMAGE)
    if [ "$CMD" != "null" ]; then
        echo CMD $CMD
    fi
}

start() {
    SERVICE=$1

    docker-compose rm -f $SERVICE
    docker-compose create --build $SERVICE
    CONTAINER=$(docker-compose ps -q $SERVICE)
    IMAGE=$(docker inspect -f '{{.Config.Image}}' $CONTAINER)
    if [ -z "$(echo $IMAGE | grep :)" ]; then
      IMAGE=$IMAGE:latest
    fi

    EXTENSIONS=$(docker inspect -f '{{index .Config.Labels "com.docker.loop.image-extensions"}}' $CONTAINER)
    if [ -n "$EXTENSIONS" ]; then
cat << EOF | docker build -t $IMAGE -
FROM $IMAGE
$EXTENSIONS
EOF
    fi
    
    _workspace $IMAGE $CONTAINER | docker build -t $IMAGE -

    docker-compose rm -f $SERVICE

    # Can't pass volume map on windows due to MSYS path translation
    docker-compose run --name ${PROJECT_NAME}_${SERVICE}_loop -d $SERVICE

    # build "$@"
}

build() {
    SERVICE=$1
    docker exec -i ${PROJECT_NAME}_${SERVICE}_workspace //.ws/build
    IMAGE=$(docker inspect -f '{{.Config.Image}}' ${PROJECT_NAME}_${SERVICE}_workspace)
    if [ -z "$(echo $IMAGE | grep :)" ]; then
      IMAGE=$IMAGE:latest
    fi
    CMD=$(docker inspect -f '{{json .Config.Cmd}}' $IMAGE)
    # TODO: propagate command
    docker rmi -f $IMAGE
    docker commit \
        -c 'ENTRYPOINT [ "/.ws/exec" ]' \
        ${PROJECT_NAME}_${SERVICE}_workspace \
        $IMAGE
}

run() {
    build "$@"
    SERVICE=$1
    docker-compose run --service-ports --rm $SERVICE
}

end() {
    docker-compose -f docker-loop.yml down -v
}

$ACTION "$@"